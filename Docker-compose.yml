services:

  discovery-service:
    build: ./discovery-service
    container_name: discovery-dock
    ports:
      - '8762:8762'
    expose:
      - '8762'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://discovery-dock:8762/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 4
      start_period: 15s
    networks:
      - backend

  config-service:
    build: ./config-service
    container_name: config-dock
    ports:
      - '8888:8888'
    expose:
      - '8888'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://config-dock:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 4
      start_period: 15s
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8762/eureka
    depends_on:
      discovery-service:
        condition: service_healthy
    networks:
      - backend

  gateway-service:
    build: ./gateway-service
    container_name: gateway-dock
    ports:
      - '9999:9999'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://gateway-dock:9999/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 4
      start_period: 15s
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8762/eureka
      - CONFIG_SERVICE_URL=http://config-dock:8888
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    networks:
      - backend

  auth-service:
    build: ./auth-service
    container_name: auth-dock
    ports:
      - '8081:8081'
    expose:
      - '8081'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8762/eureka
      - CONFIG_SERVICE_URL=http://config-dock:8888
    depends_on:
      config-service:
        condition: service_healthy
      mysql:
        condition: service_started
    networks:
      - backend

  user-service:
    build: ./user-service
    container_name: user-dock
    ports:
      - '8082:8082'
    expose:
      - '8082'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8762/eureka
      - CONFIG_SERVICE_URL=http://config-dock:8888
    depends_on:
      config-service:
        condition: service_healthy
      mysql:
        condition: service_started
    networks:
      - backend

  content-service:
    build: ./content-service
    container_name: content-dock
    ports:
      - '8083:8083'
    expose:
      - '8083'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8762/eureka
      - CONFIG_SERVICE_URL=http://config-dock:8888
    depends_on:
      config-service:
        condition: service_healthy
      mysql:
        condition: service_started
    networks:
      - backend

  social-service:
    build: ./social-service
    container_name: social-dock
    ports:
      - '8084:8084'
    expose:
      - '8084'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8762/eureka
      - CONFIG_SERVICE_URL=http://config-dock:8888
    depends_on:
      config-service:
        condition: service_healthy
      mysql:
        condition: service_started
    networks:
      - backend

  notification-service:
    build: ./notification-service
    container_name: notification-dock
    ports:
      - '8085:8085'
    expose:
      - '8085'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8762/eureka
      - CONFIG_SERVICE_URL=http://config-dock:8888
    depends_on:
      config-service:
        condition: service_healthy
      mysql:
        condition: service_started
    networks:
      - backend

  report-service:
    build: ./report-service
    container_name: report-dock
    ports:
      - '8081:8081'
    expose:
      - '8081'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8762/eureka
      - CONFIG_SERVICE_URL=http://config-dock:8888
    depends_on:
      config-service:
        condition: service_healthy
      mysql:
        condition: service_started
    networks:
      - backend

  admin-service:
    build: ./admin-service
    container_name: admin-dock
    ports:
      - "8086:8086"
    expose:
      - '8086'
    networks:
      - backend

  mysql:
    image: mysql:8.0
    container_name: mysql-dock
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

networks:
  backend:

volumes:
  mysql-data:
